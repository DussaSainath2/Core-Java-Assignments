//Associate for Given Technology

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Associate {
    private int id;
    private String name;
    private String technology;
    private int experienceInYears;

    public Associate(int id, String name, String technology, int experienceInYears) {
        this.id = id;
        this.name = name;
        this.technology = technology;
        this.experienceInYears = experienceInYears;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getTechnology() {
        return technology;
    }

    public void setTechnology(String technology) {
        this.technology = technology;
    }

    public int getExperienceInYears() {
        return experienceInYears;
    }

    public void setExperienceInYears(int experienceInYears) {
        this.experienceInYears = experienceInYears;
    }
}

public class Solution {
    public static Associate[] associatesForGivenTechnology(Associate[] associates, String searchTechnology) {
        List<Associate> result = new ArrayList<>();
        for (Associate associate : associates) {
            if (associate.getTechnology().equalsIgnoreCase(searchTechnology)
                    && associate.getExperienceInYears() % 5 == 0) {
                result.add(associate);
            }
        }
        return result.toArray(new Associate[0]);
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Associate[] associates = new Associate[5];
        for (int i = 0; i < 5; i++) {
            int id = Integer.parseInt(scanner.nextLine().trim());
            String name = scanner.nextLine().trim();
            String technology = scanner.nextLine().trim();
            int experienceInYears = Integer.parseInt(scanner.nextLine().trim());
            associates[i] = new Associate(id, name, technology, experienceInYears);
        }
        String searchTechnology = scanner.nextLine().trim();

        Associate[] filteredAssociates = associatesForGivenTechnology(associates, searchTechnology);
        for (Associate associate : filteredAssociates) {
            System.out.println(associate.getId());
        }
    }
}
